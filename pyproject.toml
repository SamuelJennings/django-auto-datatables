[tool.poetry]
name = "django-auto-datatables"
version = "0.0.1"
description = "A high-level Django app for easily creating datatables(.net) from models."
authors = ["Sam Jennings <samuel.scott.jennings@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "auto_datatables"}]
homepage = "https://github.com/SSJenny90/django-auto-datatables"
keywords = ["django", "datatables", "datatables.net"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = "^5.0.7"
djangorestframework-datatables = "^0.7.2"
drf-orjson-renderer = {version = "^1.7.1", optional = true}
drf-schema-adapter = "^3.0.6"
djangorestframework-datatables-editor = "^0.3.3"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
coverage = "^7.2.1"
deptry = "^0.8.0"
django-coverage-plugin = "^3.0.0"
django-debug-toolbar-template-profiler = "^2.1.0"
django-extensions = "^3.2.1"
django-stubs = "^1.15.0"
djlint = "^1.25.0"
geoluminate-docs = {git = "https://github.com/Geoluminate/geoluminate-docs.git", rev = "master"}
invoke = "^2.0.0"
ipython = "^8.21.0"
mypy = "^1.2.0"
pre-commit = "^3.2.2"
pylint-celery = "^0.3"
pylint-django = "^2.5.3"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-django = "^4.5.2"
pytest-sugar = "^0.9.7"
tox = "^4.4.6"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py38']
preview = true

[tool.isort]
profile = "black"

[tool.mypy]
files = ["auto-datatables"]
disallow_untyped_defs = "False"
disallow_any_unimported = "False"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "False"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ["docs/","migrations/","tests/settings.py"]
mypy_path = "auto-datatables/"
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
exclude = ['docs/']
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101","S105"]
# "**/models.py" = ["A003",]
# "docs/conf.py" = ["*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
filterwarnings = [
    "ignore",
    "default:::auto-datatables",
]


[tool.coverage.report]
skip_empty = true
omit = [
    "*site-packages*",
    "*tests*",
    "*.tox*",
    ]
show_missing = "true"

[tool.coverage.run]
branch = "true"
source = ["auto-datatables"]


[tool.deptry]
extend_exclude = [
    "tasks.py",
    "docs/"
]
ignore_transitive = [
    "toml",
]


[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py38, py39, py310, py311

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
passenv = PYTHON_VERSION
allowlist_externals = poetry
commands =
    poetry install -v --without docs
    pytest --doctest-modules tests --cov --cov-config=pyproject.toml --cov-report=xml
    mypy
"""

